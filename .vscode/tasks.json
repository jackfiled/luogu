// tasks.json
{
    "version": "2.0.0",
    "tasks": [
        {//这个大括号里是构建的配置文件
            "label": "build",//任务的名称
            "type" : "shell",//任务类型，process是vsc把预定义变量和转义解析后直接全部传给command；shell相当于先打开shell再输入命令，所以args还会经过shell再解析一遍
            "command": "g++",//在shell中执行的命令，若编译C++改为g++
            "args": [//一些传递给命令的参数
                "${file}",
                "-o",
               "${workspaceFolder}/bin/${fileBasenameNoExtension}.out",//这里是生成exe程序的位置，因为我自己设置了bin文件夹的位置，因此我直接使用绝对路径
                "-g",//生成和调试有关的信息
                "-Wall",//开启额外警告
                "-static-libgcc",//静态链接libgcc
                "-lm",//链接一个库文件
                "-std=c++20", // 语言标准，可根据自己的需要进行修改，写c++要换成c++的语言标准，比如c++11
                "-fsanitize=address", // 越界杀虫剂
                "-fsanitize=undefined", // 未定义杀虫剂
            ],
            "group": {
                "kind": "build",//表示这一组任务类型是构建
                "isDefault": true//表示这个任务是当前这组任务中的默认任务
            },
            "presentation": {
                "echo": true,//表示在执行任务时在终端要有输出
                "reveal": "always",//执行任务时是否跳转到终端面板，可以为always，silent，never
                "focus": false,//设为true后可以使执行task时焦点聚集在终端，但对编译来说，设为true没有意义，因为运行的时候才涉及到输入
                "panel": "new",//每次执行这个task时都新建一个终端面板，也可以设置为shared，共用一个面板，不过那样会出现‘任务将被终端重用’的提示，比较烦人
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher":"$gcc",////捕捉编译时编译器在终端里显示的报错信息，将其显示在vscode的‘问题’面板里
        },
        {
            "label": "run",
            "type": "shell",
            "dependsOn":"build",
            "command":"${workspaceFolder}/bin/${fileBasenameNoExtension}.out",//这里是运行生成的程序的命令，同样使用绝对路径
            "group": {
                "kind": "test",
                "isDefault": true,
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,////这个就设置为true了，运行任务后将焦点聚集到终端，方便进行输入
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            }
        }
    ]
}
